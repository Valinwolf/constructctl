#!/bin/bash
error() {
	echo;echo
	echo "*****  Error in $1  *****"
	cd "$dir"
	failog="$RUN_PREFIX/install_$(date | sed -e 's/  /_/g' -e 's/ /_/g')-faillogs"
	mv "$logs" "$failog"
	echo "Logs can be found in '$failog'"
	exit 1
}
check_state() {
	if [ -f "$INSTALL_PREFIX/bin/construct" ]
	then
		echo "DETECTED"
		if [ -d "$RUN_PREFIX/install/src" ]
		then
			echo "    Uninstalling current version..."
			cd "$RUN_PREFIX/install/src"
			make uninstall > "$logs/uninstall.log" 2>&1 || error "uninstalling the old copy"
			cd "$dir"
		else
			echo "    Source files not found."
			read -p "        Source directory: " src
			if [ -f "$src/Makefile" ]
			then
				cd "$src"
				make uninstall > "$logs/uninstall.log" 2>&1 || error "uninstalling the old copy"
			else
				echo 'Directory not found!'
				exit 1
			fi
		fi
	else
		echo "NOT FOUND"
		mkdir -p "$RUN_PREFIX/install"
		rm -fr "$RUN_PREFIX/install/src"
	fi
}
waitforproc() {
	i=1
	sp="o"
	while [ -h /proc/$1/exe ]
	do
		printf "\b$sp"
		case "$i" in
			"0") sp=".";i=1;;
			"1") sp="o";i=2;;
			"2") sp="0";i=3;;
			"3") sp="o";i=0;;
			*)   sp=".";i=0;;
		esac
		sleep 0.5
	done
	printf "\b. DONE\n"
}

waitforfile() {
	i=1
	sp="o"
	while [ -f $1 ]
	do
		printf "\b$sp"
		case "$i" in
			"0") sp=".";i=1;;
			"1") sp="o";i=2;;
			"2") sp="0";i=3;;
			"3") sp="o";i=0;;
			*)   sp=".";i=0;;
		esac
		sleep 0.5
	done
}

exitfilewait() {
	rm -f "$1"
	[ "$2" == "1" ] && printf "\b. FAILED\n" && error "$3"
	[ "$2" == "0" ] && printf "\b. DONE\n"
}

get_source() {
	cd "$RUN_PREFIX/install"
	if [ -d src ]
	then
		cd src
		proc=`mktemp`
		waitforfile &
		git reset --hard 2>&1 > $logs/download.log || exitfilewait "$proc" 1 "fetching the source"
		git clean -x -f -d 2>&1 > $logs/download.log || exitfilewait "$proc" 1 "fetching the source"
		git pull 2>&1 > $logs/download.log || exitfilewait "$proc" 1 "fetching the source"
		exitfilewait "$proc" 0 "fetching the source"
	else
		git clone https://github.com/jevolk/charybdis.git src >$logs/download.log 2>&1 || error "fetching the source" &
		waitforproc $!
		cd src
	fi
}
